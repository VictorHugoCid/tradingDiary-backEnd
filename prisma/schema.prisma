// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//CRIAR UM ENROLMENT PRA NOME E FOTO E OUTROS DADOS PESSOAIS

model User {
  id         Int          @id @default(autoincrement())
  email      String       @unique @db.VarChar(255)
  password   String?       @db.VarChar(255)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  Session    Session[]
  Trades     Trades[]
  Strategies Strategies[]
  PersonalInfo PersonalInfo[]
}

model PersonalInfo {
  id         Int      @id @default(autoincrement())
  name       String
  pictureUrl String?
  userId    Int
  User      User     @relation(fields: [userId], references: [id])
  createdAt  DateTime @default(now()) @db.Timestamp(6)
  updatedAt  DateTime @updatedAt
}

model Session {
  id        Int      @id @default(autoincrement())
  userId    Int
  User      User     @relation(fields: [userId], references: [id])
  token     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Trades {
  id         Int      @id @default(autoincrement())
  buyOrSell  String
  userId     Int
  User       User     @relation(fields: [userId], references: [id])
  day        DateTime @db.Date
  strategyId Int
  Strategies Strategies @relation(fields: [strategyId], references: [id])
  stock      String
  amount     Int
  isGain     Boolean
  entryPrice Float	@db.DoublePrecision
  exitPrice  Float	@db.DoublePrecision
  points     Float	@db.DoublePrecision
  value      Float	@db.DoublePrecision
  entryTime  String
  exitTime   String
  createdAt  DateTime @default(now()) @db.Timestamp(6)
  updatedAt  DateTime @updatedAt
}

model Strategies {
  id          Int      @id @default(autoincrement())
  userId      Int
  User        User     @relation(fields: [userId], references: [id])
  name        String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}